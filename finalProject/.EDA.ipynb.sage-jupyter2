{"backend_state":"init","connection_file":"/projects/183af3d5-8548-4a20-9a82-38842b87480b/.local/share/jupyter/runtime/kernel-3719ba1d-5dcc-4977-9d80-d097a026725d.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"06dc19","input":"# imputation\n# one of MANY ways to handle null data\n# Can we replace Empty values with actual values? If so, what values are we replacing it with?\n\n# https://towardsdatascience.com/6-different-ways-to-compensate-for-missing-values-data-imputation-with-examples-6022d9ca0779\n","pos":41,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a2efab","input":"","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ab2c55","input":"","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b99d3a","input":"","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ecdbfb","input":"","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":100,"id":"e09eee","input":"import plotly.graph_objects as go\n\nfig = go.Figure(data=go.Violin(y=data['Hardness'], box_visible=True, line_color='black',\n                               meanline_visible=True, fillcolor='lightseagreen', opacity=0.6,\n                               x0='Hardness'))\n\nfig.update_layout(yaxis_zeroline=False)\nfig.show()","output":{"0":{"data":{"iframe":"538dcb2a8c47034042704bad4959690556387cd8"},"exec_count":100,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":104,"id":"2fa6d0","input":"import plotly.express as px\n\nfig = px.violin(data, y=\"Conductivity\", box=True, \n                points='all',\n               )\nfig.show()","output":{"0":{"data":{"iframe":"e713f2e6f8913492fad1eec46ae49c6d376ad847"},"exec_count":104,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":105,"id":"3a5e76","input":"sns.displot(data[\"ph\"])\nplt.show","output":{"0":{"data":{"text/plain":"<function matplotlib.pyplot.show(close=None, block=None)>"},"exec_count":105,"output_type":"execute_result"},"1":{"data":{"image/png":"4a6e37ede1acad4e65d029611caa237c42685555","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":105,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":109,"id":"30fa9b","input":"fig = px.bar(data, x='Conductivity', y='Trihalomethanes')\nfig.show()","output":{"0":{"data":{"iframe":"5d83b000659063a4256691fdb0aee82950f83dcc"},"exec_count":109,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"6d97c4","input":"data.head()\n\n# potability = is the water safe to drink?","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ph</th>\n      <th>Hardness</th>\n      <th>Solids</th>\n      <th>Chloramines</th>\n      <th>Sulfate</th>\n      <th>Conductivity</th>\n      <th>Organic_carbon</th>\n      <th>Trihalomethanes</th>\n      <th>Turbidity</th>\n      <th>Potability</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>NaN</td>\n      <td>204.890455</td>\n      <td>20791.318981</td>\n      <td>7.300212</td>\n      <td>368.516441</td>\n      <td>564.308654</td>\n      <td>10.379783</td>\n      <td>86.990970</td>\n      <td>2.963135</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.716080</td>\n      <td>129.422921</td>\n      <td>18630.057858</td>\n      <td>6.635246</td>\n      <td>NaN</td>\n      <td>592.885359</td>\n      <td>15.180013</td>\n      <td>56.329076</td>\n      <td>4.500656</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8.099124</td>\n      <td>224.236259</td>\n      <td>19909.541732</td>\n      <td>9.275884</td>\n      <td>NaN</td>\n      <td>418.606213</td>\n      <td>16.868637</td>\n      <td>66.420093</td>\n      <td>3.055934</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>8.316766</td>\n      <td>214.373394</td>\n      <td>22018.417441</td>\n      <td>8.059332</td>\n      <td>356.886136</td>\n      <td>363.266516</td>\n      <td>18.436524</td>\n      <td>100.341674</td>\n      <td>4.628771</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>9.092223</td>\n      <td>181.101509</td>\n      <td>17978.986339</td>\n      <td>6.546600</td>\n      <td>310.135738</td>\n      <td>398.410813</td>\n      <td>11.558279</td>\n      <td>31.997993</td>\n      <td>4.075075</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         ph    Hardness        Solids  Chloramines     Sulfate  Conductivity  \\\n0       NaN  204.890455  20791.318981     7.300212  368.516441    564.308654   \n1  3.716080  129.422921  18630.057858     6.635246         NaN    592.885359   \n2  8.099124  224.236259  19909.541732     9.275884         NaN    418.606213   \n3  8.316766  214.373394  22018.417441     8.059332  356.886136    363.266516   \n4  9.092223  181.101509  17978.986339     6.546600  310.135738    398.410813   \n\n   Organic_carbon  Trihalomethanes  Turbidity  Potability  \n0       10.379783        86.990970   2.963135           0  \n1       15.180013        56.329076   4.500656           0  \n2       16.868637        66.420093   3.055934           0  \n3       18.436524       100.341674   4.628771           0  \n4       11.558279        31.997993   4.075075           0  "},"exec_count":11,"output_type":"execute_result"}},"pos":2,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":110,"id":"f8716d","input":"sns.displot(data[\"Conductivity\"])\nplt.show","output":{"0":{"data":{"text/plain":"<function matplotlib.pyplot.show(close=None, block=None)>"},"exec_count":110,"output_type":"execute_result"},"1":{"data":{"image/png":"798f914ba080c07dad7e48ab2415b20d05302f1f","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":110,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":111,"id":"cc2f2c","input":"sns.displot(data[\"Hardness\"])\nplt.show","output":{"0":{"data":{"text/plain":"<function matplotlib.pyplot.show(close=None, block=None)>"},"exec_count":111,"output_type":"execute_result"},"1":{"data":{"image/png":"c8459e9124e43b66da6acde4e83b13b9c395e719","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":111,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":112,"id":"f5db85","input":"sns.displot(data[\"Trihalomethanes\"])\nplt.show","output":{"0":{"data":{"text/plain":"<function matplotlib.pyplot.show(close=None, block=None)>"},"exec_count":112,"output_type":"execute_result"},"1":{"data":{"image/png":"747fd0f9ee2081fea98bfb2038bdaf1c6d6d59c7","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":112,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":113,"id":"cabc4f","input":"sns.displot(data[\"Solids\"])\nplt.show","output":{"0":{"data":{"text/plain":"<function matplotlib.pyplot.show(close=None, block=None)>"},"exec_count":113,"output_type":"execute_result"},"1":{"data":{"image/png":"b31ba49eae55087f45a4fa4077f579a5d0345e5e","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":113,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":114,"id":"1c8ead","input":"sns.displot(data[\"Organic_carbon\"])\nplt.show","output":{"0":{"data":{"text/plain":"<function matplotlib.pyplot.show(close=None, block=None)>"},"exec_count":114,"output_type":"execute_result"},"1":{"data":{"image/png":"213b381b90db99be2ba918c2dc1c5bb4f8244b90","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":114,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":115,"id":"807814","input":"sns.displot(data[\"Potability\"])\nplt.show","output":{"0":{"data":{"text/plain":"<function matplotlib.pyplot.show(close=None, block=None)>"},"exec_count":115,"output_type":"execute_result"},"1":{"data":{"image/png":"5975db847f898e46a58a8f5b55584ffa6ee25930","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":115,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":123,"id":"32ac8d","input":"data.boxplot(figsize=(14,7))","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":123,"output_type":"execute_result"},"1":{"data":{"image/png":"58293d347076aef22b9b72d5d0b049b3b49841f4","text/plain":"<Figure size 1008x504 with 1 Axes>"},"exec_count":123,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":28,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":126,"id":"cdcfc2","input":"data.shape[0]","output":{"0":{"data":{"text/plain":"3276"},"exec_count":126,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"cb255b","input":"# Standardize Data:\n\n# For some value \"x\" in a dataset of [x1, x2, x3, ... xN], the standardized form of x\n# = (x - mean(dataset)) / std_dev(dataset)\n\ndata.columns\n\ndata.isnull().sum()","output":{"0":{"data":{"text/plain":"ph                 491\nHardness             0\nSolids               0\nChloramines          0\nSulfate            781\nConductivity         0\nOrganic_carbon       0\nTrihalomethanes    162\nTurbidity            0\nPotability           0\ndtype: int64"},"exec_count":14,"output_type":"execute_result"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":154,"id":"a3ae06","input":"# groupby – allows you to group / aggregate information by various features\n\ndata.groupby(\"Potability\")[\"Solids\"].mean()\n\n# pivot_tables() - read the pandas docs. ","output":{"0":{"data":{"text/plain":"Potability\n0    21777.490788\n1    22383.991018\nName: Solids, dtype: float64"},"exec_count":154,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":156,"id":"2592e4","input":"\npx.parallel_coordinates(data, color=\"Potability\", range_color = [0, 1], labels={\n                \"Solids\": \"Solids\", \"ph\": \"ph\", },\n                             color_continuous_scale=px.colors.diverging.Tealrose,\n                             color_continuous_midpoint=2)","output":{"0":{"data":{"iframe":"813d52d029c5509452e0337fb7ecd4d201514731"},"exec_count":156,"output_type":"execute_result"}},"pos":30,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"084fa6","input":"import pandas as pd\n\nimport numpy as np\n\nimport plotly.express as px\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"0da742","input":"px.scatter(x = data[\"Hardness\"],\n           y = data[\"Conductivity\"],\n           color = data[\"Potability\"])","output":{"0":{"data":{"iframe":"47d94dc7d83232cb3682fdc9905968bc7d1a769c"},"exec_count":31,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"70c24b","input":"data[\"Potability\"].hist()","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":31,"output_type":"execute_result"},"1":{"data":{"image/png":"3845121b61ec31586b122a232fc45379f8c839ea","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":31,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"ca35ee","input":"data = pd.read_csv(\"./Data/water_potability.csv\")","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"56b51f","input":"px.scatter(data, x = \"Conductivity\", y = \"Turbidity\", hover_data = [\"Hardness\", \"Solids\", \"Chloramines\", \"Sulfate\", \"Conductivity\"])","output":{"0":{"data":{"iframe":"ca096b3505dca674a1939dbe44554cad8cdc34bc"},"exec_count":41,"output_type":"execute_result"}},"pos":7,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":48,"id":"0081d2","input":"px.scatter_3d(x = data[\"Chloramines\"],y = data[\"Solids\"], z = data[\"ph\"], color = data[\"Hardness\"])","output":{"0":{"data":{"iframe":"86f7788f7eaf70ebe5498dcc8e1d4e06998d950c"},"exec_count":48,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"536081","input":"def standard_deviation(x):\n    return (x - data[\"Turbidity\"].mean())**2\n\nTurbidity = data[\"Turbidity\"]\n\nTurbidity","output":{"0":{"data":{"text/plain":"0       2.963135\n1       4.500656\n2       3.055934\n3       4.628771\n4       4.075075\n          ...   \n3271    4.435821\n3272    2.798243\n3273    3.298875\n3274    4.708658\n3275    2.309149\nName: Turbidity, Length: 3276, dtype: float64"},"exec_count":49,"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"a17105","input":"# data.head()\n\ntype(len)","output":{"0":{"data":{"text/plain":"builtin_function_or_method"},"exec_count":50,"output_type":"execute_result"}},"pos":32,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":53,"id":"dca0b3","input":"px.scatter(data, x = \"Organic_carbon\", y = \"Potability\", hover_data = [\"Potability\"])","output":{"0":{"data":{"iframe":"707ddbe34695da215bbcf0084a280450aed7e5c8"},"exec_count":53,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":54,"id":"0237a4","input":"data2 = data[[\"ph\", \"Hardness\", \"Solids\", \"Chloramines\", \"Sulfate\", \"Conductivity\", \"Organic_carbon\", \"Trihalomethanes\", \"Turbidity\", \"Potability\"]]\nscatter_matrix = px.scatter_matrix(data2)\nscatter_matrix.show()\n","output":{"0":{"data":{"iframe":"a50a07a8ece3bf49c93814058a8a84b7d29de2bd"},"exec_count":54,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"6b3c3e","input":"corrMatrix = data.corr() #creates a correlation matrix (pandas)\nplt.subplots(figsize=(15,10))  \nsns.heatmap(corrMatrix, annot=True)\nplt.show()","output":{"0":{"data":{"image/png":"eed6738da41423fd88494bc3f125dca75ccc710c","text/plain":"<Figure size 720x720 with 2 Axes>"},"exec_count":59,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"0464f9","input":"data[\"Conductivity\"].hist()","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":6,"output_type":"execute_result"},"1":{"data":{"image/png":"b8c706c36e04742b212dc117c6b7863a8357d20d","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":6,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":61,"id":"c9c456","input":"px.scatter_3d(x = data[\"Sulfate\"],y = data[\"Potability\"], z = data[\"Conductivity\"], color = data[\"ph\"])","output":{"0":{"data":{"iframe":"b4a67055e9fc276ed52cb2900a402187306927d4"},"exec_count":61,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":63,"id":"c378e4","input":"import numpy as np\n\nstandard_deviation = data[\"ph\"].apply(lambda x : (x - data[\"ph\"].mean())/np.std(data[\"ph\"]))\n\nph = \"pH\"\nprint(f\"This is the standard deviation of the column {ph}: {standard_deviation}\")\nprint(f\"This is the average {standard_deviation.mean()}\")\nprint(f\"This is the range of the standard deviation {standard_deviation.max()-standard_deviation.min()}\")","output":{"0":{"name":"stdout","output_type":"stream","text":"This is the standard deviation of the column pH: 0            NaN\n1      -2.110818\n2       0.638838\n3       0.775374\n4       1.261849\n          ...   \n3271   -1.513577\n3272    0.456742\n3273    1.467169\n3274   -1.225841\n3275    0.498030\nName: ph, Length: 3276, dtype: float64\nThis is the average 1.072698682324271e-14\nThis is the range of the standard deviation 8.782752752979828\n"}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":73,"id":"6694e0","input":"Said = \"ph\"\nJason = \"Chloramines\"\nSean = \"Turbidity\"\nAnnya = \"Organic_carbon\"\nEthan = \"Conductvity\"\nSmayan = \"Sulfate\"\n\n# Using .apply(), can you standardize each of these columns?\n\n# For our example, z = (x - mean(column)) / (std_dev(column))\n\n# [PANDAS DOCUMENTATION] = https://pandas.pydata.org/docs/reference/index.html#api\n# [NUMPY DOCUMENTATION] = https://numpy.org/doc/stable/reference/index.html#reference","pos":36,"type":"cell"}
{"cell_type":"code","exec_count":74,"id":"9bce19","input":"data[\"Conductivity\"] - data[\"Conductivity\"].mean()\n\n\n\narr = np.array([1, 2, 3])\narr * 2 \n\n# can we use np.std() to find the standard deviation of the column? ","output":{"0":{"data":{"text/plain":"array([2, 4, 6])"},"exec_count":74,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":75,"id":"809b00","input":"out = data[\"Organic_carbon\"].apply(lambda x: (x - data[\"Organic_carbon\"].mean())/np.std(data[\"Organic_carbon\"]))\nprint(out)\nprint(abs(out).idxmax(), abs(out).max())\nprint(abs(out).idxmin(), abs(out).min())","output":{"0":{"name":"stdout","output_type":"stream","text":"0      -1.180651\n1       0.270597\n2       0.781117\n3       1.255134\n4      -0.824357\n          ...   \n3271   -0.118075\n3272    1.698560\n3273   -0.981329\n3274   -0.942064\n3275    0.560940\nName: Organic_carbon, Length: 3276, dtype: float64\n1792 4.2371471807941115\n3088 0.0004604429454810218\n"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":78,"id":"06b5a8","input":"standardized = data[\"Chloramines\"].apply(lambda x: (x-data[\"Chloramines\"].mean())/np.std(data[\"Chloramines\"]))\nprint(standardized)","output":{"0":{"name":"stdout","output_type":"stream","text":"0       0.112415\n1      -0.307694\n2       1.360594\n3       0.592008\n4      -0.363698\n          ...   \n3271    0.028027\n3272    0.593290\n3273    0.144017\n3274   -0.517373\n3275    0.244515\nName: Chloramines, Length: 3276, dtype: float64\n"},"1":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":78,"output_type":"execute_result"},"2":{"data":{"image/png":"21bc48dec9701c6ca792da805cc25470de1a2882","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":78,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":39,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":82,"id":"92d195","input":"arr = np.array([1, 0, 5, 7, 0])\narr.mean()","output":{"0":{"data":{"text/plain":"2.6"},"exec_count":82,"output_type":"execute_result"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":95,"id":"e22782","input":"px.scatter(data, x = \"ph\", y = \"Chloramines\", hover_data = [\"Hardness\", \"Solids\"])\n","output":{"0":{"data":{"iframe":"7af826c2527f56a37edc40fdbf2e2e2cc5f8a79d"},"exec_count":95,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"raw","id":"a3f4e6","input":"px.scatter(x = data[\"ph\"],\n          y = data[\"Hardness\"],\n          color = data[\"Potability\"])","pos":9,"type":"cell"}
{"id":0,"time":1656712115582,"type":"user"}
{"last_load":1656711891032,"type":"file"}